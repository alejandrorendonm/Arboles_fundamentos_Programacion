import java.util.Scanner;

class main {
    // Clase Nodo - cada cajita del √°rbol
    static class Nodo {
        int valor;
        Nodo izquierda;
        Nodo derecha;

        Nodo(int valor) {
            this.valor = valor;
            this.izquierda = null;
            this.derecha = null;
        }
    }

    // La ra√≠z del √°rbol
    static Nodo raiz = null;
    static int contador = 0;  // Para contar cu√°ntos n√∫meros hay

    // INSERTAR un n√∫mero en el √°rbol
    public static void insertar(int numero) {
        if (raiz == null) {
            raiz = new Nodo(numero);
            contador++;
            System.out.println("‚úì Se insert√≥ " + numero + " como ra√≠z del √°rbol");
        } else {
            insertarNodo(raiz, numero);
        }
    }

    // Funci√≥n auxiliar para insertar
    static void insertarNodo(Nodo nodo, int numero) {
        // Si el n√∫mero es menor, va a la izquierda
        if (numero < nodo.valor) {
            if (nodo.izquierda == null) {
                nodo.izquierda = new Nodo(numero);
                contador++;
                System.out.println("‚úì Se insert√≥ " + numero + " a la izquierda de " + nodo.valor);
            } else {
                insertarNodo(nodo.izquierda, numero);
            }
        }
        // Si el n√∫mero es mayor, va a la derecha
        else if (numero > nodo.valor) {
            if (nodo.derecha == null) {
                nodo.derecha = new Nodo(numero);
                contador++;
                System.out.println(" Se insert√≥ " + numero + " a la derecha de " + nodo.valor);
            } else {
                insertarNodo(nodo.derecha, numero);
            }
        }
        // Si el n√∫mero ya existe
        else {
            System.out.println(" El n√∫mero " + numero + " ya existe en el √°rbol");
        }
    }

    // BUSCAR un n√∫mero en el √°rbol
    public static void buscar(int numero) {
        System.out.print("Buscando " + numero + "... ");
        if (buscarNodo(raiz, numero)) {
            System.out.println("¬°ENCONTRADO! ‚úì");
        } else {
            System.out.println("No est√° en el √°rbol ‚úó");
        }
    }

    // Funci√≥n auxiliar para buscar
    static boolean buscarNodo(Nodo nodo, int numero) {
        if (nodo == null) {
            return false;
        }
        if (numero == nodo.valor) {
            return true;
        }
        if (numero < nodo.valor) {
            return buscarNodo(nodo.izquierda, numero);
        } else {
            return buscarNodo(nodo.derecha, numero);
        }
    }

    // MOSTRAR todos los n√∫meros (en orden)
    public static void mostrar() {
        if (raiz == null) {
            System.out.println("El √°rbol est√° vac√≠o");
        } else {
            System.out.println("\n=== CONTENIDO DEL √ÅRBOL ===");
            System.out.println("Total de n√∫meros: " + contador);
            System.out.print("N√∫meros ordenados: ");
            mostrarEnOrden(raiz);
            System.out.println("\n===========================");
        }
    }

    // Funci√≥n para mostrar
    static void mostrarEnOrden(Nodo nodo) {
        if (nodo != null) {
            mostrarEnOrden(nodo.izquierda);
            System.out.print(nodo.valor + " ");
            mostrarEnOrden(nodo.derecha);
        }
    }

    // PROGRAMA PRINCIPAL
    public static void main(String[] args) {
        Scanner entrada = new Scanner(System.in);


        System.out.println("√ÅRBOL BINARIO SIMPLE");

        while (true) {
            System.out.println("\n--- MEN√ö ---");
            System.out.println("1. Insertar varios n√∫meros");
            System.out.println("2. Buscar varios n√∫meros");
            System.out.println("3. Ver √°rbol completo");
            System.out.println("4. Salir");
            System.out.print("Elige: ");

            int opcion = entrada.nextInt();

            if (opcion == 1) {
                // INSERTAR VARIOS N√öMEROS SIN VOLVER AL MEN√ö
                System.out.println("\n=== INSERTAR N√öMEROS ===");
                System.out.println("(Escribe 0 para volver al men√∫)");

                while (true) {
                    System.out.print("Insertar n√∫mero: ");
                    int num = entrada.nextInt();

                    if (num == 0) {
                        System.out.println("Volviendo al men√∫...");
                        break;
                    }

                    insertar(num);
                }
            }
            else if (opcion == 2) {
                // BUSCAR VARIOS N√öMEROS SIN VOLVER AL MEN√ö
                if (raiz == null) {
                    System.out.println("‚ö† El √°rbol est√° vac√≠o, inserta n√∫meros primero");
                } else {
                    System.out.println("\n=== BUSCAR N√öMEROS ===");
                    System.out.println("(Escribe 0 para volver al men√∫)");

                    while (true) {
                        System.out.print("Buscar n√∫mero: ");
                        int num = entrada.nextInt();

                        if (num == 0) {
                            System.out.println("Volviendo al men√∫...");
                            break;
                        }

                        buscar(num);
                    }
                }
            }
            else if (opcion == 3) {
                mostrar();
            }
            else if (opcion == 4) {
                System.out.println("\n¬°Gracias por practicar! üëã");
                System.out.println("Insertaste " + contador + " n√∫meros en total");
                break;
            }
            else {
                System.out.println("‚ö† Opci√≥n no v√°lida (1-4)");
            }
        }

        entrada.close();
    }
}
